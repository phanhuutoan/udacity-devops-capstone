AWSTemplateFormatVersion: 2010-09-09
Description: Udacity capstone

Parameters: 
  VPCCidr:
    Description: VPC Cidr
    Type: String
  Tag:
    Description: Project tag
    Type: String
  PublicSubnetCidr1:
    Description: public subnet cidr 1
    Type: String
  PublicSubnetCidr2:
    Description: public subnet cidr 2
    Type: String
  PrivateSubnetCidr1:
    Description: Private subnet cidr 1
    Type: String
  PrivateSubnetCidr2:
    Description: Private subnet cidr 2
    Type: String


Resources: 
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: project
          Value: !Ref Tag

  UdaIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: project
          Value: !Ref Tag

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref UdaIGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref PublicSubnetCidr1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: project
          Value: !Ref Tag
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref PublicSubnetCidr2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: project
          Value: !Ref Tag
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref PrivateSubnetCidr1
      MapPublicIpOnLaunch: true #TODO: Fixed later
      Tags:
        - Key: project
          Value: !Ref Tag
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref PrivateSubnetCidr2
      MapPublicIpOnLaunch: true # TODO: Fixed later
      Tags:
        - Key: project
          Value: !Ref Tag

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DBSubnet group for RDS
      SubnetIds:
        - !GetAtt [PrivateSubnet1, "SubnetId"]
        - !GetAtt [PrivateSubnet2, "SubnetId"]
      Tags:
        - Key: project
          Value: !Ref Tag
          
  PublicRTB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
  PublicRouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRTB
  PublicRouteAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRTB
  ConnectInternetGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRTB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref UdaIGW

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DBSecurityGroup
      GroupDescription: db sg
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 60000
          CidrIp: 0.0.0.0/0


Outputs:
  VPCId:
    Description: VPC id
    Value: !Ref myVPC
    Export: 
      Name: VPCId
  RDSSubnetGroupID:
    Description: RDS subnet group
    Value: !Ref RDSSubnetGroup
    Export: 
      Name: SubnetGroupId
  PublicSubnet1:
    Description: public subnet 1
    Value: !Ref PublicSubnet1
    Export: 
      Name: PublicSubnet1
  PublicSubnet2:
    Description: public subnet 2
    Value: !Ref PublicSubnet2
    Export: 
      Name: PublicSubnet2
  DBSecurityGroupId:
    Description: db sg id
    Value: !GetAtt [DBSecurityGroup, GroupId]
    Export: 
      Name: DBSecurityGroupId
  

